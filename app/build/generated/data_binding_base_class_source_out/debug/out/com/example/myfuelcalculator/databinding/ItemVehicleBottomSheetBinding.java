// Generated by view binder compiler. Do not edit!
package com.example.myfuelcalculator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myfuelcalculator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemVehicleBottomSheetBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final TextView tvAuthonomy;

  @NonNull
  public final TextView tvFuel;

  @NonNull
  public final TextView tvName;

  private ItemVehicleBottomSheetBinding(@NonNull ConstraintLayout rootView,
      @NonNull Guideline guideline, @NonNull TextView tvAuthonomy, @NonNull TextView tvFuel,
      @NonNull TextView tvName) {
    this.rootView = rootView;
    this.guideline = guideline;
    this.tvAuthonomy = tvAuthonomy;
    this.tvFuel = tvFuel;
    this.tvName = tvName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemVehicleBottomSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemVehicleBottomSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_vehicle_bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemVehicleBottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.tvAuthonomy;
      TextView tvAuthonomy = ViewBindings.findChildViewById(rootView, id);
      if (tvAuthonomy == null) {
        break missingId;
      }

      id = R.id.tvFuel;
      TextView tvFuel = ViewBindings.findChildViewById(rootView, id);
      if (tvFuel == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      return new ItemVehicleBottomSheetBinding((ConstraintLayout) rootView, guideline, tvAuthonomy,
          tvFuel, tvName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
